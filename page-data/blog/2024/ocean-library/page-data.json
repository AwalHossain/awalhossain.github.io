{"componentChunkName":"component---src-templates-post-tsx-content-file-path-src-posts-2024-ocean-library-index-mdx","path":"/blog/2024/ocean-library/","result":{"data":{"mdx":{"id":"4a8d5fc9-8f3a-5798-bd49-56bb7a0bbef5","body":"\n\n# OceanLibrary\n\nOceanLibrary is a comprehensive <b>book management</b> web application built with React.js, RTK Query, TypeScript on the frontend, and Node.js, Express.js, and MongoDB on the backend. It is designed for book enthusiasts, allowing users to explore a vast collection of books, <b>virtual</b> bookshelves to <b>categorize</b> books into \"Read,\" \"Currently Reading,\" \"Want to Read,\" \n\n\n\n\n**Live Demo:** [https://oceanlibrary.netlify.app/](https://oceanlibrary.netlify.app/) <br/>\n**GitHub Clien:** [https://github.com/AwalHossain/ocean-library/](https://github.com/AwalHossain/ocean-library) <br/>\n**Github Server:** [https://github.com/AwalHo/bookish-server](https://github.com/AwalHo/bookish-server)\n\n\n\n## Overview\n\nBookish is a sophisticated web application designed for book enthusiasts. It provides a comprehensive platform for discovering, reviewing, and managing books. With an emphasis on user-friendly design and intuitive navigation, Bookish offers a plethora of features to enhance the user experience.\n\n## Key Features\n\n✅ **Personal Libraries**: Create virtual bookshelves to categorize books into \"Read\",\"Currently Reading\"<br />\n✅ **Reading progress**: Track progress and update statuses on books being read.<br />\n✅ **Recommendations**: Personalized book recommendations based on reading history.<br />\n✅ **Discovery:** Browse through an extensive collection of books or conduct targeted searches by title, author, or genre.<br />\n✅ **Advanced Filtering:** Refine your search results based on specific criteria such as title, author, genre.<br />\n✅ **Book Reviews:** Share your thoughts on books you've read by adding reviews, including a rating and a summary.<br />\n✅ **Admin Functionality**: Authorized administrators can create new books and update existing ones.<br />\n\n ## Technical Highlights\n\n✅ **Modern Frontend Stack**: Harnessed React's component-based architecture and unidirectional data flow for a modular and scalable single-page application (SPA).<br />\n✅ **State Management**: Utilized RTK Query's caching and reactive capabilities to efficiently manage application state and provide real-time updates.<br />\n✅ **TypeScript Integration**: Implemented TypeScript for enhanced code maintainability, better tooling, and improved developer productivity.<br />\n✅ **Express Server**: Constructed an Express server on the Node.js runtime environment, leveraging middleware design patterns for modular routing and controller logic.<br />\n✅ **NoSQL Database**: Composed a MongoDB document-oriented database for flexible data schemas and rapid prototyping, facilitated by Mongoose for schema validation and community support.<br />\n✅ **Transaction Management**: Employed Mongoose transactions to ensure atomicity, consistency, isolation, and durability (ACID) when updating user preferences across multiple collections.<br />\n✅ **Component Composition**: Decomposed the user interface into smaller, reusable components for better code organization and maintainability.<br />\n✅ **State Lifting**: Implemented state lifting to manage user preferences efficiently across multiple components.<br />\n## A Glimpse of site\n![image](https://github.com/AwalHossain/ocean-library/assets/80216813/3c35c78f-541e-46d7-a599-aafb883da43b)\n\n![image](https://github.com/AwalHossain/ocean-library/assets/80216813/4a16f86a-e200-4ece-aa26-ca68a6215414)\n\n![image](https://github.com/AwalHossain/ocean-library/assets/80216813/cbdabaa5-c744-4ad5-b11a-50c8a4a28a56)\n\n\n### Frontend Setup\n\n1. Navigate to the `ocean-library` directory.\n2. Install the required node modules with `yarn add`.\n3. Start the frontend server with `yarn dev`.\n\n\n## Contributing\n\nWe welcome contributions to Bookish! If you're interested in enhancing the platform, feel free to fork this repository and submit your changes. We appreciate your help in making Bookish even better.\n\n## License\n\nBookish is licensed under the MIT License. For more details, please see the [LICENSE](LICENSE) file.\n\n## Contact\n\nWe'd love to hear from you! If you have any questions, suggestions, or feedback, please contact me.\n","fields":{"slug":"/blog/2024/ocean-library/"},"internal":{"contentFilePath":"/home/runner/work/awalhossain.github.io/awalhossain.github.io/src/posts/2024/ocean-library/index.mdx"},"frontmatter":{"title":"OceanLibrary - Book Management Web Application","summary":"OceanLibrary is a comprehensive book management web application built with React.js, RTK Query, TypeScript on the frontend, and Node.js, Express.js, and MongoDB on the backend.","date":"20 May, 2024","cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#e8f8f8","images":{"fallback":{"src":"/static/5ff4f77bcbfb33a6dde6c9d6cf32c5e2/15393/newpile.png","srcSet":"/static/5ff4f77bcbfb33a6dde6c9d6cf32c5e2/15393/newpile.png 648w","sizes":"100vw"},"sources":[{"srcSet":"/static/5ff4f77bcbfb33a6dde6c9d6cf32c5e2/237a6/newpile.webp 648w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.8765432098765432}}}}}},"pageContext":{"slug":"/blog/2024/ocean-library/","frontmatter":{"title":"OceanLibrary - Book Management Web Application","summary":"OceanLibrary is a comprehensive book management web application built with React.js, RTK Query, TypeScript on the frontend, and Node.js, Express.js, and MongoDB on the backend.","cover":"assets/newpile.png","date":"2024-05-20T00:00:00.000Z"}}},"staticQueryHashes":[],"slicesMap":{}}