{"version":3,"file":"component---src-pages-blog-tsx-9648355e46bc7c9dbdb5.js","mappings":"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","sources":["webpack://portfolio/./node_modules/@react-icons/all-files/fi/FiCalendar.js","webpack://portfolio/./node_modules/@react-icons/all-files/fi/FiClock.js","webpack://portfolio/./src/components/shared/Badge.tsx","webpack://portfolio/./src/components/shared/Card.tsx","webpack://portfolio/./src/components/shared/CardContent.tsx","webpack://portfolio/./src/components/shared/CardMedia.tsx","webpack://portfolio/./src/components/shared/CardTitle.tsx","webpack://portfolio/./src/components/shared/Cards.tsx","webpack://portfolio/./src/components/shared/PageHeader.tsx","webpack://portfolio/./src/components/elements/PostPreview.tsx","webpack://portfolio/./src/components/elements/PostList.tsx","webpack://portfolio/./src/components/screens/BlogScreen.tsx","webpack://portfolio/./src/pages/blog.tsx","webpack://portfolio/./src/utils/time.ts"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FiCalendar = function FiCalendar (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"4\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"2\",\"x2\":\"16\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"2\",\"x2\":\"8\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"10\",\"x2\":\"21\",\"y2\":\"10\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FiClock = function FiClock (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 6 12 12 16 14\"}}]})(props);\n};\n","import React from 'react';\n\ntype BadgeProps = {\n    children: React.ReactNode,\n    className?: string,\n};\n\nconst Badge = (props: BadgeProps): React.ReactElement | null => {\n  const { children, className = '' } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClassName = 'bg-gray-200 dark:bg-gray-800 px-1 rounded text-xs';\n  const classes = `${commonClassName} ${className}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Badge;\n","import React from 'react';\n\ntype CardMode = 'row' | 'column';\n\ntype CardProps = {\n    children: React.ReactNode,\n    mode?: CardMode,\n};\n\nexport const cardModeRow: CardMode = 'row';\nexport const cardModeColumn: CardMode = 'column';\n\nconst Card = (props: CardProps): React.ReactElement | null => {\n  const { children, mode } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonCardStyles = 'transition duration-200 ease-in-out shadow-lg rounded-md overflow-hidden bg-gray-100 dark:bg-gray-900 flex flex-col';\n\n  const classes = mode === cardModeRow ? `${commonCardStyles} sm:flex-row items-stretch`\n    : `${commonCardStyles}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\ntype CardContentMode = 'row' | 'column';\n\nexport const cardContentModeRow: CardContentMode = 'row';\nexport const cardContentModeColumn: CardContentMode = 'column';\n\ntype CardContentProps = {\n    children: React.ReactNode,\n    className?: string,\n    mode?: CardContentMode,\n};\n\nconst CardContent = (props: CardContentProps): React.ReactElement | null => {\n  const { children, className = '', mode = cardContentModeColumn } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClasses = `p-6 ${className}`;\n\n  const classes = mode === cardContentModeRow\n    ? `${commonClasses} sm:w-3/5 lg:w-3/4`\n    : `${commonClasses}`;\n\n  return (\n    <div className={classes} style={{ flex: 1 }}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardContent;\n","import React from 'react';\nimport { Link } from '../../types/Link';\nimport HyperLink from './HyperLink';\n\ntype CardMediaMode = 'row' | 'column';\n\nexport const cardMediaModeRow: CardMediaMode = 'row';\nexport const cardMediaModeColumn: CardMediaMode = 'column';\n\ntype CardMediaProps = {\n    children: React.ReactNode,\n    className?: string,\n    mode?: CardMediaMode,\n    link?: Link,\n};\n\nconst CardMedia = (props: CardMediaProps) => {\n  const {\n    children, className, mode, link\n  } = props;\n\n  const linkClasses = link && link.url\n    ? 'cursor-pointer'\n    : '';\n\n  if (!children) {\n    return null;\n  }\n\n  const commonCardMediaStyles = `transition duration-200 ease-in-out transform hover:-translate-y-1 hover:scale-105 h-48 bg-cover bg-gray-200 overflow-hidden block ${className} ${linkClasses}`;\n\n  const classes = mode === cardMediaModeRow\n    ? `${commonCardMediaStyles} sm:h-auto sm:w-2/5 lg:w-1/4`\n    : `${commonCardMediaStyles}`;\n\n  const wrappedChildren = link && link.url ? (\n    <HyperLink link={link} formatted={false}>\n      {children}\n    </HyperLink>\n  ) : children;\n\n  return (\n    <div className={classes}>\n      {wrappedChildren}\n    </div>\n  );\n};\n\nexport default CardMedia;\n","import React from 'react';\nimport { Link } from '../../types/Link';\nimport H, { hLevel } from './H';\nimport HyperLink from './HyperLink';\n\ntype CardTitleProps = {\n    children: React.ReactNode,\n    link?: Link,\n};\n\nconst CardTitle = (props: CardTitleProps): React.ReactElement | null => {\n  const { children, link } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const headerElement = (\n    <H level={hLevel.h3}>\n      {children}\n    </H>\n  );\n\n  const linkElement = link ? (\n    <HyperLink link={link}>\n      {headerElement}\n    </HyperLink>\n  ) : null;\n\n  return (\n    <div className=\"mb-3\">\n      {linkElement || headerElement}\n    </div>\n  );\n};\n\nexport default CardTitle;\n","import React from 'react';\n\ntype CardsMode = 'list' | 'grid';\n\nexport const cardModeList: CardsMode = 'list';\nexport const cardModeGrid: CardsMode = 'grid';\n\ntype CardsProps = {\n    children: React.ReactNode,\n    mode?: CardsMode,\n};\n\nconst Cards = (props: CardsProps): React.ReactElement | null => {\n  const { children, mode = cardModeGrid } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClasses = 'grid gap-12 grid-cols-1';\n\n  const classes = mode === cardModeGrid\n    ? `${commonClasses} sm:grid-cols-2 lg:grid-cols-3`\n    : `${commonClasses}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from 'react';\nimport H, { hLevel } from './H';\n\ntype PageHeaderProps = {\n    children: React.ReactNode,\n    className?: string,\n};\n\nconst PageHeader = (props: PageHeaderProps): React.ReactElement | null => {\n  const { children, className = '' } = props;\n  const commonClasses = 'mb-6 uppercase font-extrabold';\n\n  const classes = `${commonClasses} ${className}`;\n  return (\n    <H level={hLevel.h1} className={classes}>\n      {children}\n    </H>\n  );\n};\n\nexport default PageHeader;\n","import { FiCalendar } from '@react-icons/all-files/fi/FiCalendar';\nimport { FiClock } from '@react-icons/all-files/fi/FiClock';\nimport React from 'react';\nimport { BlogPageQuery_allMdx_nodes } from '../../pages/__generated__/BlogPageQuery';\nimport { Link } from '../../types/Link';\nimport { timeToReadFromRemark } from '../../utils/time';\nimport Card, { cardModeRow } from '../shared/Card';\nimport CardContent, { cardContentModeRow } from '../shared/CardContent';\nimport CardMedia, { cardMediaModeRow } from '../shared/CardMedia';\nimport CardTitle from '../shared/CardTitle';\nimport FluidImage from '../shared/FluidImage';\nimport Row from '../shared/Row';\n\ntype PostPreviewProops = {\n    post: BlogPageQuery_allMdx_nodes\n}\n\nconst PostPreview = (props: PostPreviewProops): React.ReactElement => {\n  const { post } = props;\n\n  const postLink: Link = {\n    url: post.fields?.slug,\n  };\n\n  const postCover = post.frontmatter?.cover?.childImageSharp?.gatsbyImageData\n    ? (\n      <FluidImage fluidImage={post.frontmatter?.cover?.childImageSharp?.gatsbyImageData} />\n    ) : null;\n\n  const postSummary = post.frontmatter?.summary ? (\n    <div className=\"font-light\">\n      {post.frontmatter?.summary}\n    </div>\n  ) : null;\n\n  const dateElement = post.frontmatter?.date ? (\n    <Row className=\"mr-6\">\n      <FiCalendar className=\"mr-1\" />\n      {post.frontmatter.date}\n    </Row>\n  ) : null;\n\n  const timeToRead = post?.timeToRead ? (\n    <Row>\n      <FiClock className=\"mr-1\" />\n      {timeToReadFromRemark(post?.timeToRead)} min to read\n    </Row>\n  ) : null;\n\n  console.log(post, 'post checkign');\n\n  return (\n    <Card mode={cardModeRow}>\n      <CardMedia mode={cardMediaModeRow} link={postLink}>\n        {postCover}\n      </CardMedia>\n      <CardContent mode={cardContentModeRow}>\n        <CardTitle link={postLink}>\n          {post?.frontmatter?.title}\n        </CardTitle>\n        <Row className=\"text-xs text-gray-500 mb-3\">\n          {dateElement}\n          {timeToRead}\n        </Row>\n        {postSummary}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PostPreview;\n","import React from 'react';\nimport { BlogPageQuery, BlogPageQuery_allMdx_nodes } from '../../pages/__generated__/BlogPageQuery';\nimport Cards, { cardModeList } from '../shared/Cards';\nimport PostPreview from './PostPreview';\n\ntype PostListProps = {\n    posts: BlogPageQuery\n}\n\nconst PostList = (props: PostListProps): React.ReactElement => {\n  const { posts } = props;\n\n  const postsElements = posts.allMdx.nodes.map(\n    (node: BlogPageQuery_allMdx_nodes) => {\n      return <PostPreview post={node} key={node.id} />;\n    },\n  );\n\n  return (\n    <Cards mode={cardModeList}>\n      {postsElements}\n    </Cards>\n  );\n};\n\nexport default PostList;\n","import React from 'react';\nimport { BlogPageQuery } from '../../pages/__generated__/BlogPageQuery';\nimport PostList from '../elements/PostList';\nimport PageLayout from '../layouts/PageLayout';\nimport Badge from '../shared/Badge';\nimport PageHeader from '../shared/PageHeader';\nimport Row from '../shared/Row';\nimport SEO from '../shared/SEO';\n\ntype BlogScreenProps = {\n    posts: BlogPageQuery\n}\n\nconst BlogScreen = (props: BlogScreenProps) => {\n  const { posts } = props;\n  const postsNum = posts?.allMdx?.totalCount;\n  console.log(posts, 'posts');\n\n  return (\n    <PageLayout>\n      <SEO\n        title=\"Blog\"\n        description=\"Articles about life, web-development and machine-learning\"\n      />\n      <Row>\n        <PageHeader>Blog</PageHeader>\n        <Badge className=\"ml-3 self-start\">{postsNum}</Badge>\n      </Row>\n      <PostList posts={posts} />\n    </PageLayout>\n  );\n};\n\nexport default BlogScreen;\n","import { PageProps, graphql } from 'gatsby';\nimport React from 'react';\nimport BlogScreen from '../components/screens/BlogScreen';\nimport { BlogPageQuery } from './__generated__/BlogPageQuery';\n\ninterface BlogProps extends PageProps {\n    data: BlogPageQuery\n}\n\nexport const query = graphql`\n  query BlogPageQuery {\n    allMdx(sort: {frontmatter: {date: DESC}}) {\n      totalCount\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          summary\n          date(formatString: \"MMM D, YYYY\")\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                layout: FULL_WIDTH,\n                quality: 95,\n                transformOptions: {\n                  fit: COVER,\n                  cropFocus: CENTER,\n                  grayscale: false,\n                },\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Blog = (props: BlogProps) => {\n  const { data } = props;\n\n  return (\n    <BlogScreen posts={data} />\n  );\n};\n\nexport default Blog;\n","// Adjusting the time to read.\n// gatsby-transformer-remark plugin relies on the 265 average words per minute.\n// @see: https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-transformer-remark/src/utils/time-to-read.js\nexport const timeToReadFromRemark = (\n  remarkTimeToRead?: number | null | undefined,\n): number | null => {\n  if (typeof remarkTimeToRead !== 'number') {\n    return null;\n  }\n  const timeToReadMultiplier = 1;\n  const minTimeToRead = 1;\n  return Math.ceil(remarkTimeToRead * timeToReadMultiplier) || minTimeToRead;\n};\n\nexport const wait = async (ms: number): Promise<void> => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n"],"names":["GenIcon","module","exports","props","children","className","classes","commonClassName","React","cardModeRow","mode","commonCardStyles","cardContentModeRow","cardContentModeColumn","commonClasses","style","flex","cardMediaModeRow","link","linkClasses","url","commonCardMediaStyles","wrappedChildren","HyperLink","formatted","headerElement","H","level","hLevel","h3","linkElement","cardModeList","cardModeGrid","h1","_post$fields","_post$frontmatter","_post$frontmatter$cov","_post$frontmatter$cov2","_post$frontmatter2","_post$frontmatter2$co","_post$frontmatter2$co2","_post$frontmatter3","_post$frontmatter4","_post$frontmatter5","_post$frontmatter6","post","postLink","fields","slug","postCover","frontmatter","cover","childImageSharp","gatsbyImageData","FluidImage","fluidImage","postSummary","summary","dateElement","date","Row","FiCalendar","timeToRead","FiClock","timeToReadFromRemark","console","log","Card","CardMedia","CardContent","CardTitle","title","posts","postsElements","allMdx","nodes","map","node","PostPreview","key","id","Cards","_posts$allMdx","postsNum","totalCount","PageLayout","SEO","description","PageHeader","Badge","PostList","data","BlogScreen","remarkTimeToRead","Math","ceil"],"sourceRoot":""}