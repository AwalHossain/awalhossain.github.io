[
 
  {
    "id": 2,
    "name": "MERN Video Streaming (ONGOING)",
    "img": "https://i.ibb.co/MVKbj9f/stream-1.png",
    "duration": "Feb 28, 2023",
    "des": "MERN Video Streaming is a cutting-edge, open-source platform for video streaming, offering a comprehensive, full-stack solution utilizing the latest MERN stack technologies. With MERN Video Streaming, users can easily upload, manage, and stream videos on demand, providing a seamless experience. This project features a video processing capability that provides real-time notifications upon completion ",
    "client_side_code": "https://github.com/AwalHossain/Video_Streaming_With_MERN",
    "server_side_code": "https://github.com/AwalHossain/Video_Streaming_With_MERN",
    "technology": [
      "ReactJS",
      "NodeJS",
      "Socket.io",
      "Context Api",
      "Material UI",
      "Socket.io",
      "FFmpeg"
    ],
    "demo_img": [
      "https://user-images.githubusercontent.com/497812/220627727-04a26928-71df-4c9b-9637-92289a2beee2.png",
      "https://i.ibb.co/jJ7gd92/upload-success.png",
      "https://i.ibb.co/BrFVt8T/notify.png"
    ]
  },
  {
    "id": 3,
    "name": "NASA Mission Control Project",
    "img": "https://i.ibb.co/bd3JmJH/nasa-1.png",
    "duration": "Nov 28,2022",
    "des": "NASA mission control dashboard to schedule missions targeting Kepler exoplanets. All the functionalities are dynamic using back-end and followed the MVC pattern.Docker have used to Hosted on Amazon EC2 server. CI/CD and API unit test has checked its safety issue",
    "client_side_code": "https://github.com/AwalHossain/Nasa_Project",
    "server_side_code": "https://github.com/AwalHossain/Nasa_Project",
    "live_link": "http://3.93.190.153:8000/",
    "technology": [
      "ReactJS",
      "NodeJS",
      "ExpressJS",
      "MongoDb",
      "AWS",
      "Docker"
    ],
    "demo_img": [
      "https://i.ibb.co/bd3JmJH/nasa-1.png",
      "https://i.ibb.co/b5kDQLb/nasa-2.png",
      "https://i.ibb.co/nfH8MgT/nasa-3.png"
    ]
  },
  {
    "id": 4,
    "name": "Bhuiyan-Trading(Team Project)",
    "img": "https://i.ibb.co/Ms2fk0S/trad-1.png",
    "duration": "Oct 07,2022",
    "des": "This site provides all kind marine Automation, Navigation, Hydraulic Pump and motor, Com pressure, Fire detection system etc.  Fully customized admin dashboard for maintain all the products, contacts & post blog releted to products. Designed and implemented scalable APIs using node js and express. States are handled the with help of Redux",
    "client_side_code": "https://github.com/blooming-volcanoes/Bhuiyan-Trading-Client",
    "server_side_code": "https://github.com/blooming-volcanoes/Bhuiyan-Trading-Server",
    "live_link": "https://bhuiyan-trading.vercel.app/",
    "technology": [
      "React js",
      "Node js",
      "Express js",
      "React Router",
      "MySql",
      "Tailwind CSS",
      "Redux"
    ],
    "demo_img": [
      "https://i.ibb.co/Ms2fk0S/trad-1.png",
      "https://i.ibb.co/89CR9Nk/trad-2.png",
      "https://i.ibb.co/1ZGYKb2/trad-3.png"
    ]
  },
  {
    "id": 5,
    "name": "Health-Coach",
    "img": "https://i.ibb.co/1XzCTBC/health-1.png",
    "duration": "Oct 01,2021",
    "des": "Those who are concerned about their health will be benefited from this website. Protected route only accessible by registered user. Users can create and edit appointments, as well as delete them",
    "client_side_code": "https://github.com/AwalHossain/-healthcare-related-website-AwalHossain",
    "live_link": "https://healthcare-services-c55cf.web.app/home",
    "technology": ["React js", "React-Bootstrap", "React router dom"],
    "demo_img": [
      "https://i.ibb.co/1XzCTBC/health-1.png",
      "https://i.ibb.co/cCfrsf0/health-2.png",
      "https://i.ibb.co/zRn7Z3G/health-3.png"
    ]
  },
  {
    "id": 6,
    "name": "Uptime Monitoring",
    "img": "https://i.ibb.co/BwMSqtZ/uptime-1.png",
    "duration": "Sep 29, 2022",
    "des": "Design and developed application for monitoring the Url in raw NodeJs with no frameworks, and no external libraries. Built applications in raw NodeJs with no frameworks, and no external libraries. Built a command-line application that takes user-inputs from the console, processes them, and writes outputs back out.To build this, i have used Node’s Readline, Events, TTY, V8, and OS modules.",
    "server_side_code": "https://github.com/AwalHossain/Restful-Api-Aith-Raw-NodeJS",
    "technology": ["Node’s Readline", "Events", "TTY", "V8", "OS modules"],
    "demo_img": [
      "https://i.ibb.co/BwMSqtZ/uptime-1.png",
      "https://i.ibb.co/z4RJh2s/uptime-2.png",
      "https://i.ibb.co/phdxy0q/uptime-3.png"
    ]
  }
]
